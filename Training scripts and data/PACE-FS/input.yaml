cutoff: 6.5 # cutoff for neighbour list construction
seed: 42  # random seed

#################################################################
## Metadata section
#################################################################
metadata:
  origin: "Automatically generated input"

#################################################################
## Potential definition section
#################################################################
potential:
  deltaSplineBins: 0.001
  elements: ['Fe']

  embeddings:
    ALL: {
      npot: 'FinnisSinclairShiftedScaled',
      fs_parameters: [ 1, 1, 1, 0.5 ],
      ndensity: 2,
    }

  bonds:
    ALL: {
      radbase: SBessel,
      radparameters: [ 5.25 ],
      rcut: 6.5,
      dcut: 0.01,
      NameOfCutoffFunction: cos,
    }

  functions:
    number_of_functions_per_element: 50
    UNARY:   { nradmax_by_orders: [ 15, 6, 4, 3, 2, 2 ], lmax_by_orders: [ 0 , 3, 3, 2, 2, 1 ]}
#################################################################
## Dataset specification section
#################################################################
data:
  filename: ../../data/iron2022.pckl.gzip       # force to read reference pickled dataframe from given file
  test_size: 0.1


#################################################################
## Fit specification section
#################################################################
fit:
  loss: { kappa: 0.08, L1_coeffs: 1e-8,  L2_coeffs: 1e-8}
  # if kappa: auto, then it will be determined from the variation of energy per atom and forces norms in train set

  weighting: { type: EnergyBasedWeightingPolicy, DElow: 1.0, DEup: 10.0, DFup: 50.0, DE: 1.0, DF: 1.0, wlow: 0.75, energy: convex_hull, reftype: all,seed: 42}

  optimizer: BFGS # or L-BFGS-B

  ## maximum number of minimize iterations
  maxiter: 1000

  ## additional options for scipy.minimize
  #  options: {maxcor: 100}

  ## Automatically find the smallest interatomic distance in dataset  and set inner cutoff based on this
  #  repulsion: auto

  #  ladder_step: 100
  #  ladder_type: power_order

#################################################################
## Backend specification section
#################################################################
backend:
  evaluator: tensorpot
  batch_size: 100
  display_step: 50

